{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "description": "Represents a user of the Pathly application.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the User entity. The specific format and generation strategy depend on the target database implementation."
        },
        "email": {
          "type": "string",
          "format": "email",
          "description": "The user's email address used for authentication."
        }
      },
      "required": [
        "id",
        "email"
      ]
    },
    "VacationDetails": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "VacationDetails",
      "description": "Represents the details of a user's planned vacation.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the VacationDetails entity. The specific format and generation strategy depend on the target database implementation."
        },
        "userId": {
          "type": "string",
          "description": "Reference to the unique identifier of the related User entity. (Relationship: User 1:N VacationDetails)"
        },
        "destination": {
          "type": "string",
          "description": "The destination of the vacation."
        },
        "dates": {
          "type": "string",
          "description": "The dates of the vacation."
        },
        "interests": {
          "type": "string",
          "description": "The interests of the user for the vacation."
        }
      },
      "required": [
        "id",
        "userId",
        "destination",
        "dates",
        "interests"
      ]
    },
    "LocationRecommendation": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "LocationRecommendation",
      "description": "Represents a recommended location for a user to visit.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the LocationRecommendation entity. The specific format and generation strategy depend on the target database implementation."
        },
        "name": {
          "type": "string",
          "description": "The name of the recommended location."
        },
        "shortDescription": {
          "type": "string",
          "description": "A short description of the recommended location."
        },
        "pictures": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An array of URLs pointing to pictures of the recommended location."
        }
      },
      "required": [
        "id",
        "name",
        "shortDescription",
        "pictures"
      ]
    },
    "FavoriteLocation": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "FavoriteLocation",
      "description": "Represents a location that a user has saved as a favorite. Stored as a subcollection under the user.",
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "description": "Reference to the unique identifier of the related User entity. (Implicit relationship via subcollection path)"
        },
        "locationId": {
          "type": "string",
          "description": "Reference to the unique identifier of the related LocationRecommendation entity. Also used as the document ID for this favorite entry."
        },
         "name": {
            "type": "string",
             "description": "Denormalized name of the location for easier display in lists."
          }
      },
      "required": [
        "userId",
        "locationId"
      ]
    },
     "PlannedVisit": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "PlannedVisit",
      "description": "Represents a location/activity selected by the user to include in their vacation plan. Stored as a subcollection under the user.",
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "description": "Reference to the unique identifier of the related User entity. (Implicit relationship via subcollection path)"
        },
        "vacationId": {
          "type": "string",
          "description": "Reference to the specific VacationDetails entity this visit belongs to."
        },
        "locationId": {
          "type": "string",
          "description": "Reference to the unique identifier of the related LocationRecommendation entity."
        },
        "locationName": {
            "type": "string",
             "description": "Denormalized name of the location for easier display."
        },
         "locationImageUrl": {
            "type": "string",
             "format": "uri",
             "description": "Denormalized primary image URL for the location."
          }
      },
      "required": [
        "userId",
        "vacationId",
        "locationId",
        "locationName"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "google.com",
      "anonymous"
    ],
    "rationales": {
      "providers": "The user explicitly requested email authentication. Password authentication covers this. Google authentication is added as a common convenient option. Anonymous Auth covers users who may want to explore the app without full registration."
    }
  },
  "firestore": {
     "collections": [
       {
         "path": "/users/{userId}",
         "schema": { "$ref": "#/entities/User" },
         "description": "Stores user profile information."
       },
       {
         "path": "/vacationDetails/{vacationDetailsId}",
         "schema": { "$ref": "#/entities/VacationDetails" },
         "description": "Stores the core details for each planned vacation."
       },
       {
         "path": "/locationRecommendations/{locationRecommendationId}",
         "schema": { "$ref": "#/entities/LocationRecommendation" },
         "description": "Potentially stores general location data if not fetching externally."
       },
       {
         "path": "/users/{userId}/favoriteLocations/{locationId}",
         "schema": { "$ref": "#/entities/FavoriteLocation" },
         "description": "Subcollection storing a user's favorited locations. Uses locationId as document ID."
       },
        {
         "path": "/users/{userId}/plannedVisits/{planItemId}",
         "schema": { "$ref": "#/entities/PlannedVisit" },
         "description": "Subcollection storing locations/activities a user has added to a specific vacation plan. planItemId could be a composite ID like {vacationId}_{locationId} or an auto-ID."
       }
     ],
    "reasoning": "Updated structure:\n*   **/users/{userId}**: Stores user profiles.\n*   **/vacationDetails/{vacationDetailsId}**: Stores details for each vacation plan (destination, dates, interests).\n*   **/locationRecommendations/{locationRecommendationId}**: Optional collection if we need to store general location data fetched from external APIs or generated by AI.\n*   **/users/{userId}/favoriteLocations/{locationId}**: Subcollection for user favorites. Using locationId as the document ID allows easy checking if a location is favorited.\n*   **/users/{userId}/plannedVisits/{planItemId}**: Subcollection for items added to a specific plan. The `planItemId` could be an auto-generated ID or a composite ID (e.g., `vacationId_locationId`) for easier querying per vacation plan. Includes denormalized `locationName` and `locationImageUrl` for display."
  }
}
